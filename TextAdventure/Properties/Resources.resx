<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>What do you want to do?</value>
  </data>
  <data name="Credits_Back" xml:space="preserve">
    <value>Back to menu.</value>
  </data>
  <data name="Credits_Description" xml:space="preserve">
    <value>This game has been made by Jöran Malek (GPBP914) as first project at SAE Institute Hamburg.
Rules: Console Game, Style of Zorg.

Idea: Jöran Malek
Programming: Jöran Malek</value>
  </data>
  <data name="Credits_Title" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="DefaultInteract" xml:space="preserve">
    <value>You interacted with {0}.</value>
  </data>
  <data name="GameOver_Description" xml:space="preserve">
    <value>You just finished the game. The following has been added to your finish:
{0}</value>
  </data>
  <data name="GameOver_Title" xml:space="preserve">
    <value>You just finished the game.</value>
  </data>
  <data name="InvalidAction" xml:space="preserve">
    <value>Input {0} is unknown.</value>
  </data>
  <data name="MainMenu_Credits" xml:space="preserve">
    <value>Show me credits.</value>
  </data>
  <data name="MainMenu_Description" xml:space="preserve">
    <value>This is the main menu. Please choose one of the options below to do something more relevant than this</value>
  </data>
  <data name="MainMenu_Exit" xml:space="preserve">
    <value>Quit this application.</value>
  </data>
  <data name="MainMenu_Start" xml:space="preserve">
    <value>Start adventure!</value>
  </data>
  <data name="MainMenu_Title" xml:space="preserve">
    <value>TextAdventure</value>
  </data>
  <data name="Room1_Description_Dark" xml:space="preserve">
    <value>You wake up in a dark room. You can see the silhouette of some objects. One looks like a switch. Another is mid-high and has a round shape.</value>
  </data>
  <data name="Room1_Description_Light" xml:space="preserve">
    <value>You switched on the light. You are able to see every corner of this room. It is not large. There is a door on the other side. The round silhouette turns out to be a table. There is a glass with green and fluid content on the table.</value>
  </data>
  <data name="Room1_Died_Glass" xml:space="preserve">
    <value>You drunk the glass with red content. You do not feel well and slowly start faltering.</value>
  </data>
  <data name="Room1_Fail" xml:space="preserve">
    <value>You tried everything, but nothing happened.</value>
  </data>
  <data name="Room1_LightSwitch_TurnOn" xml:space="preserve">
    <value>You have toggled the light switch.</value>
  </data>
  <data name="Room1_Title" xml:space="preserve">
    <value>Entry Room</value>
  </data>
  <data name="Room2_Description" xml:space="preserve">
    <value>You opened the door and went through it. Something got your attention. It's a small, grey thing. There in a corner of this room. After some time you recognize a mice in it. Right next to it is a door. On this door stands "Mage" in magical letters.</value>
  </data>
  <data name="Room2_Fail" xml:space="preserve">
    <value>Maybe .. "attack" or "sneak" are what you want to try?</value>
  </data>
  <data name="Room2_Title" xml:space="preserve">
    <value>Long Hall</value>
  </data>
  <data name="StrikeWords" xml:space="preserve">
    <value>with</value>
  </data>
</root>